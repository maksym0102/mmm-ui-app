package {{:package}};

import com.mojang.logging.LogUtils;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.Blocks;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.event.RegistryEvent;
import net.minecraft.client.renderer.ItemBlockRenderTypes;
import net.minecraft.client.renderer.RenderType;
import net.minecraftforge.eventbus.api.IEventBus;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.InterModComms;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.event.lifecycle.InterModEnqueueEvent;
import net.minecraftforge.fml.event.lifecycle.InterModProcessEvent;
import net.minecraftforge.event.server.ServerStartingEvent;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;
import org.slf4j.Logger;
import java.util.stream.Collectors;

import {{:package}}.item.ModItems;
import {{:package}}.painting.ModPaintings;
import {{:package}}.block.ModBlocks;

// The value here should match an entry in the META-INF/mods.toml file
@Mod({{:modclass}}.MOD_ID)
public class {{:modclass}}
{
    private static final Logger LOGGER = LogUtils.getLogger();
    public static final String MOD_ID = "{{:modid}}";

    public {{:modclass}}()
    {
        // Register the setup method for modloading
        IEventBus eventBus = FMLJavaModLoadingContext.get().getModEventBus();
        ModItems.registerItems();
        ModItems.register(eventBus);
        ModBlocks.register(eventBus);
        ModPaintings.register(eventBus);
        eventBus.addListener(this::setup);
        eventBus.addListener(this::clientSetup);

        // Register ourselves for server and other game events we are interested in
        MinecraftForge.EVENT_BUS.register(this);
    }

    private void clientSetup(final FMLClientSetupEvent event) {
        {{for projectdata.blocks}}
            ItemBlockRenderTypes.setRenderLayer(ModBlocks.MAP.get("{{:data.registryName}}").get(), RenderType.{{:data.renderType onError="solid"}}());
        {{/for}}
        {{for projectdata.crops}}
            ItemBlockRenderTypes.setRenderLayer(ModBlocks.MAP.get("{{:data.registryName}}").get(), RenderType.cutout());
        {{/for}}
    }

    private void setup(final FMLCommonSetupEvent event)
    {

    }
}